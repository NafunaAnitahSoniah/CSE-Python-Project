# Generated by Django 5.2.4 on 2025-08-05 09:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChickStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=25, unique=True)),
                ('chick_type', models.CharField(choices=[('layer', 'Layer'), ('broiler', 'Broiler')], max_length=15)),
                ('chick_breed', models.CharField(choices=[('local', 'Local'), ('exotic', 'Exotic')], max_length=15)),
                ('chick_age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('chick_price', models.PositiveIntegerField(default=1650)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_id', models.CharField(max_length=15, unique=True)),
                ('farmer_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(30)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('location', models.CharField(max_length=30)),
                ('nin', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z0-9]{14}$', 'NIN must be 14 alphanumeric characters.')])),
                ('phone_number', models.CharField(max_length=15)),
                ('recommender_name', models.CharField(max_length=50)),
                ('recommender_nin', models.CharField(max_length=14)),
                ('recommender_tel', models.CharField(max_length=15)),
                ('registered_by', models.CharField(max_length=50)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_name', models.CharField(max_length=25, unique=True)),
                ('feed_name', models.CharField(max_length=25)),
                ('feed_type', models.CharField(max_length=25)),
                ('feed_brand', models.CharField(max_length=25)),
                ('feed_quantity', models.PositiveIntegerField()),
                ('expiry_date', models.DateField()),
                ('purchase_price', models.PositiveIntegerField()),
                ('selling_price', models.PositiveIntegerField()),
                ('supplier', models.CharField(max_length=100)),
                ('supplier_contact', models.CharField(max_length=15, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChickRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chick_request_id', models.CharField(max_length=15, unique=True)),
                ('farmer_type', models.CharField(choices=[('starter', 'Starter'), ('returning', 'Returning')], max_length=10)),
                ('chick_type', models.CharField(choices=[('layer', 'Layer'), ('broiler', 'Broiler')], max_length=15)),
                ('chick_breed', models.CharField(choices=[('local', 'Local'), ('exotic', 'Exotic')], max_length=15)),
                ('quantity', models.PositiveIntegerField()),
                ('chick_period', models.PositiveIntegerField()),
                ('feed_taken', models.BooleanField(default=True)),
                ('payment_terms', models.CharField(choices=[('mobile_money', 'Mobile Money'), ('visa', 'Visa'), ('cash', 'Cash')], max_length=20)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('received_through', models.CharField(choices=[('walk-in', 'Walk-in'), ('phonecall', 'Phonecall')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('delivered', models.BooleanField(default=False)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChicksApp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='FeedAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_request_id', models.CharField(max_length=15, unique=True)),
                ('feed_name', models.CharField(max_length=25)),
                ('feed_type', models.CharField(max_length=25)),
                ('feed_brand', models.CharField(max_length=25)),
                ('bags_allocated', models.PositiveIntegerField(default=2)),
                ('amount_due', models.PositiveIntegerField()),
                ('payment_due_date', models.DateField()),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('chick_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChicksApp.chickrequest')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('sales_agent', 'sales_agent'), ('manager', 'manager')], default='manager', max_length=20)),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', 'Enter a valid phone number.')])),
                ('title', models.CharField(blank=True, max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'farmer_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_id', models.CharField(max_length=15, unique=True)),
                ('total_amount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chick_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ChicksApp.chickrequest')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chickrequest',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_requests', to=settings.AUTH_USER_MODEL),
        ),
    ]
